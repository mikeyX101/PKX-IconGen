<!--
    PKX-IconGen.AvaloniaUI - Avalonia user interface for PKX-IconGen.Core
    Copyright (C) 2021-2022 Samuel Caron/mikeyX#4697

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <https://www.gnu.org/licenses/>. 
-->
<!--x:Class="PKXIconGen.AvaloniaUI.Views.PokemonRenderDataWindow"-->
<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:conv="using:PKXIconGen.AvaloniaUI.Converters"
        xmlns:vm="using:PKXIconGen.AvaloniaUI.ViewModels"
        xmlns:views="using:PKXIconGen.AvaloniaUI.Views"
        xmlns:blender="using:PKXIconGen.Core.Data.Blender"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="clr-namespace:Projektanker.Icons.Avalonia;assembly=Projektanker.Icons.Avalonia"
        xmlns:color="clr-namespace:AvaloniaColorPicker;assembly=AvaloniaColorPicker"
        
        mc:Ignorable="d" d:DesignWidth="1300" d:DesignHeight="850"
        x:Class="PKXIconGen.AvaloniaUI.Views.PokemonRenderDataWindow"
        x:DataType="vm:PokemonRenderDataWindowViewModel" x:CompileBindings="True"
        
        Icon="/Assets/gen-icon.ico"
        Title="{Binding Title, Mode=OneTime}"
        
        TransparencyLevelHint="AcrylicBlur"
        Background="Transparent"
        ExtendClientAreaChromeHints="PreferSystemChrome"
        ExtendClientAreaToDecorationsHint="True"
        
        MinWidth="1300" Width="1300" MinHeight="850" Height="900" CanResize="True">
  <Window.Resources>
    <conv:LightTypeMaterialDesignIconConverter x:Key="LightTypeMaterialDesignIconConverter"/>
    <conv:EnumerableSemiColonStringConverter x:Key="EnumerableSemiColonStringConverter"/>
    <conv:PKXColorHexStringConverter x:Key="PkxColorHexStringConverter"/>
    <conv:PKXColorAvaloniaColorConverter x:Key="PkxColorAvaloniaColorConverter"/>
    <conv:PKXHeaderConverter x:Key="PkxHeaderConverter"/>
  </Window.Resources>
  <Window.Styles>
    <StyleInclude Source="/Assets/Styles.axaml" />
    <Style Selector="TextBox[IsEnabled=false]">
      <Setter Property="Height" Value="35" />
    </Style>
    <Style Selector="ListBoxItem TextBox[IsEnabled=false]">
      <Setter Property="Height" Value="0" />
    </Style>
    <Style Selector="TextBlock.VectorLabel, TextBox.VectorLabel">
      <Setter Property="HorizontalAlignment" Value="Right" />
      <Setter Property="VerticalAlignment" Value="Center" />
      <Setter Property="Margin" Value="8" />
    </Style>
  </Window.Styles>

  <Panel>
    <ExperimentalAcrylicBorder IsHitTestVisible="False">
      <ExperimentalAcrylicBorder.Material>
        <ExperimentalAcrylicMaterial
            BackgroundSource="Digger"
            TintColor="Black"
            TintOpacity="0.75"
            MaterialOpacity="0.65" />
      </ExperimentalAcrylicBorder.Material>
    </ExperimentalAcrylicBorder>

    <!--IsVisible="{Binding CurrentlyModifying}"-->
    <Grid IsVisible="{Binding CurrentlyModifying}" Background="#dd000000" ZIndex="10" ColumnDefinitions="*" RowDefinitions="*,*">
      <TextBlock Text="Change data in Blender..." Margin="8" HorizontalAlignment="Center" VerticalAlignment="Bottom" Grid.Column="0" Grid.Row="0"/>
      <Button Margin="8" Width="75" HorizontalAlignment="Center" VerticalAlignment="Top" Command="{ReflectionBinding EndModifyBlenderData}" Grid.Column="0" Grid.Row="1">
        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center">Cancel</TextBlock>
      </Button>
      <TextBlock Text="(Cancelling will close Blender and all data in Blender will be lost.)" Margin="48" HorizontalAlignment="Center" VerticalAlignment="Top" Grid.Column="0" Grid.Row="1" />
    </Grid>
    
    <Grid ShowGridLines="False" ColumnDefinitions="100,*" RowDefinitions="50,50,50,115,*,50" Margin="16">
      <TextBlock Text="{Binding Name, Mode=OneWay, Converter={StaticResource PkxHeaderConverter}}" FontSize="24" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2"/>

      <Grid ShowGridLines="False" ColumnDefinitions="100,*, 100,*" RowDefinitions="*" Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2">
        <TextBlock Text="Name:" FontSize="14" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="8" Grid.Column="0" Grid.Row="0" />
        <TextBox Text="{Binding Name, Mode=TwoWay}" Height="32" Grid.Column="1" Grid.Row="0">
          <ToolTip.Tip>
Name of the Pokemon
          </ToolTip.Tip>
        </TextBox>

        <TextBlock Text="Output Name:" FontSize="14" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="8" Grid.Column="2" Grid.Row="0" />
        <TextBox Text="{Binding OutputName, Mode=TwoWay}" Height="32" Grid.Column="3" Grid.Row="0">
          <ToolTip.Tip>
Output name for the rendered file. If unspecified, uses the Pokemon's name.
          </ToolTip.Tip>
        </TextBox>
      </Grid>
      

      <TextBlock Text="Model:" FontSize="14" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="8" Grid.Column="0" Grid.Row="2" />
      <Grid Grid.Column="1" Grid.Row="2" ColumnDefinitions="*,30" RowDefinitions="*">
        <TextBox Text="{Binding Model, Mode=TwoWay}" Height="32" Grid.Column="0" Grid.Row="0">
          <ToolTip.Tip>
Path to the Pokemon model. 

If it is in the asset folder, you can specify {{AssetPath}} instead of manually going in the folder.
Example: {{AssetPath}}/pkx_lugia/pkx_lugia.pkx.dat
          </ToolTip.Tip>
        </TextBox>
        <Button Width="30" Height="25" HorizontalAlignment="Center" VerticalAlignment="Center" Command="{ReflectionBinding BrowseModelPath}" Grid.Column="1" Grid.Row="0">
          <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center">...</TextBlock>
        </Button>
      </Grid>

      <TextBlock Text="Shiny:" FontSize="14" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="8" Grid.Column="0" Grid.Row="3" />
      <StackPanel Orientation="Vertical" Margin="0,0,0,16" Grid.Column="1" Grid.Row="3">
        <ToolTip.Tip>
Filter or different model for the shiny version of the Pokemon.
Filters cannot be transparent or have transparency.

If your shiny model is in the asset folder, you can specify {{AssetPath}} instead of manually going in the folder.
Example: {{AssetPath}}/pkx_lugia/pkx_lugia.pkx.dat
        </ToolTip.Tip>
        
        <StackPanel Orientation="Horizontal" Margin="0,0,0,8">
          <RadioButton IsChecked="{Binding ShinyColor.HasValue}" Content="Filter: " Name="ShinyFilter" GroupName="Shiny" />
          <color:ColorButton IsEnabled="{Binding #ShinyFilter.IsChecked}" Color="{Binding ShinyColor, Mode=TwoWay, Converter={StaticResource PkxColorAvaloniaColorConverter}}" />
          <TextBlock Text="Hex:" Margin="8" VerticalAlignment="Center" />
          <TextBlock Text="{Binding ShinyColor, Mode=OneWay, Converter={StaticResource PkxColorHexStringConverter}}" Margin="8,0,32,0" VerticalAlignment="Center" />
          <TextBlock Text="R:" Margin="2" VerticalAlignment="Center" />
          <TextBlock Text="{Binding ShinyColor.Value.RValue, Mode=OneWay}" Margin="0,0,8,0" VerticalAlignment="Center" />
          <TextBlock Text="G:" Margin="2" VerticalAlignment="Center" />
          <TextBlock Text="{Binding ShinyColor.Value.GValue, Mode=OneWay}" Margin="0,0,8,0" VerticalAlignment="Center" />
          <TextBlock Text="B:" Margin="2" VerticalAlignment="Center" />
          <TextBlock Text="{Binding ShinyColor.Value.BValue, Mode=OneWay}" Margin="0,0,8,0" VerticalAlignment="Center" />
        </StackPanel>

        <RadioButton IsChecked="{Binding !ShinyColor.HasValue}" Content="Shiny Model: " Name="ShinyModel" GroupName="Shiny" Margin="0,0,0,4" />
        <Grid ColumnDefinitions="*,30" RowDefinitions="*">
          <TextBox IsEnabled="{Binding #ShinyModel.IsChecked}" Text="{Binding ShinyModel, Mode=TwoWay}" Height="32" Grid.Column="0" Grid.Row="0" />
          <Button IsEnabled="{Binding #ShinyModel.IsChecked}" Width="30" Height="25" HorizontalAlignment="Center" VerticalAlignment="Center" Command="{ReflectionBinding BrowseShinyModelPath}" Grid.Column="1" Grid.Row="0">
            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center">...</TextBlock>
          </Button>
        </Grid>
      </StackPanel>

      <Border CornerRadius="10" Background="#ff4f4f4f" Grid.Column="0" Grid.Row="4" Grid.ColumnSpan="2">
        <Grid ShowGridLines="False" ColumnDefinitions="100,75,*,75,*,75,*,75,*,75,*,75,*" RowDefinitions="50,*,20,*,*,*,*,*,50">
          
          <ToggleButton Margin="16,0,16,0" Width="75" HorizontalAlignment="Center" VerticalAlignment="Center" Command="{ReflectionBinding ShinyToggleCommand}" Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="13">
            <Panel>
              <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center" Classes="tbunchecked">Normal</TextBlock>
              <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center" Classes="tbchecked">Shiny</TextBlock>
            </Panel>
          </ToggleButton>

          <TextBlock Text="Animation:" FontSize="14" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="8" Grid.Column="0" Grid.Row="1" />
          <TextBlock Text="Pose: " HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="1" Grid.Row="1" />
          <TextBox Text="{Binding AnimationPose, Mode=OneWay}" IsEnabled="False" Grid.Column="2" Grid.Row="1" Grid.ColumnSpan="4" />
          
          <TextBlock Text="Frame: " HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="7" Grid.Row="1"/>
          <TextBox Text="{Binding AnimationFrame, Mode=OneWay}" IsEnabled="False" Grid.Column="8" Grid.Row="1" Grid.ColumnSpan="4" />

          <TextBlock Text="Main:" FontSize="14" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="8" Grid.Column="0" Grid.Row="3" />
          
          <TextBlock Text="Camera" HorizontalAlignment="Center" Margin="8" Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="6"/>
          <TextBlock Text="Pos X: " Classes="VectorLabel" Grid.Column="1" Grid.Row="3" />
          <TextBox Text="{Binding MainCamera.Position.X, Mode=OneWay}" IsEnabled="False" Grid.Column="2" Grid.Row="3" />
          <TextBlock Text="Pos Y: " Classes="VectorLabel" Grid.Column="3" Grid.Row="3" />
          <TextBox Text="{Binding MainCamera.Position.Y, Mode=OneWay}" IsEnabled="False" Grid.Column="4" Grid.Row="3" />
          <TextBlock Text="Pos Z: " Classes="VectorLabel" Grid.Column="5" Grid.Row="3" />
          <TextBox Text="{Binding MainCamera.Position.Z, Mode=OneWay}" IsEnabled="False" Grid.Column="6" Grid.Row="3" />
          <TextBlock Text="Focus X: " Classes="VectorLabel" Grid.Column="1" Grid.Row="4" />
          <TextBox Text="{Binding MainCamera.FocusPoint.X, Mode=OneWay}" IsEnabled="False" Grid.Column="2" Grid.Row="4" />
          <TextBlock Text="Focus Y: " Classes="VectorLabel" Grid.Column="3" Grid.Row="4" />
          <TextBox Text="{Binding MainCamera.FocusPoint.Y, Mode=OneWay}" IsEnabled="False" Grid.Column="4" Grid.Row="4" />
          <TextBlock Text="Focus Z: " Classes="VectorLabel" Grid.Column="5" Grid.Row="4" />
          <TextBox Text="{Binding MainCamera.FocusPoint.Z, Mode=OneWay}" IsEnabled="False" Grid.Column="6" Grid.Row="4" />

          <TextBlock Text="Lights" HorizontalAlignment="Center" Margin="8" Grid.Column="7" Grid.Row="2" Grid.ColumnSpan="6" />
          <TextBlock Text="Color: " Classes="VectorLabel" Grid.Column="7" Grid.Row="3" />
          <StackPanel Orientation="Horizontal" Margin="0,0,0,8" Grid.Column="8" Grid.Row="3" Grid.ColumnSpan="5">
            <color:ColorButton IsEnabled="False" Color="{Binding MainLight.Color, Mode=OneWay, Converter={StaticResource PkxColorAvaloniaColorConverter}}" />
            <TextBlock Text="Hex:" Margin="8" VerticalAlignment="Center" />
            <TextBlock Text="{Binding MainLight.Color, Mode=OneWay, Converter={StaticResource PkxColorHexStringConverter}}" Margin="8,0,32,0" VerticalAlignment="Center" />
            <TextBlock Text="R:" Margin="2" VerticalAlignment="Center" />
            <TextBlock Text="{Binding MainLight.Color.RValue, Mode=OneWay}" Margin="0,0,8,0" VerticalAlignment="Center" />
            <TextBlock Text="G:" Margin="2" VerticalAlignment="Center" />
            <TextBlock Text="{Binding MainLight.Color.GValue, Mode=OneWay}" Margin="0,0,8,0" VerticalAlignment="Center" />
            <TextBlock Text="B:" Margin="2" VerticalAlignment="Center" />
            <TextBlock Text="{Binding MainLight.Color.BValue, Mode=OneWay}" Margin="0,0,8,0" VerticalAlignment="Center" />
          </StackPanel>
          <TextBlock Text="Str: " Classes="VectorLabel" Grid.Column="7" Grid.Row="4" />
          <TextBox Text="{Binding MainLight.Strength, Mode=OneWay, TargetNullValue=None, FallbackValue=None}" IsEnabled="False" Grid.Column="8" Grid.Row="4" Grid.ColumnSpan="2" />
          <TextBlock Text="Type: " Classes="VectorLabel" Grid.Column="10" Grid.Row="4" />
          <i:Icon Value="{Binding MainLight.Type, Mode=OneWay, Converter={StaticResource LightTypeMaterialDesignIconConverter}}" Grid.Column="11" Grid.Row="4" />
          <TextBox Text="{Binding MainLight.Type, Mode=OneWay}" Margin="0,0,16,0" Grid.Column="12" Grid.Row="4" IsEnabled="False" />

          <TextBlock Text="*Secondary:" FontSize="14" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="8" Grid.Column="0" Grid.Row="5" />
          <TextBlock Text="Pos X: " Classes="VectorLabel" Grid.Column="1" Grid.Row="5" />
          <TextBox Text="{Binding SecondaryCamera.Value.Position.X, Mode=OneWay, TargetNullValue=None, FallbackValue=None}" IsEnabled="False" Grid.Column="2" Grid.Row="5" />
          <TextBlock Text="Pos Y: " Classes="VectorLabel" Grid.Column="3" Grid.Row="5" />
          <TextBox Text="{Binding SecondaryCamera.Value.Position.Y, Mode=OneWay, TargetNullValue=None, FallbackValue=None}" IsEnabled="False" Grid.Column="4" Grid.Row="5" />
          <TextBlock Text="Pos Z: " Classes="VectorLabel" Grid.Column="5" Grid.Row="5" />
          <TextBox Text="{Binding SecondaryCamera.Value.Position.Z, Mode=OneWay, TargetNullValue=None, FallbackValue=None}" IsEnabled="False" Grid.Column="6" Grid.Row="5" />
          <TextBlock Text="Rot X: " Classes="VectorLabel" Grid.Column="1" Grid.Row="6" />
          <TextBox Text="{Binding SecondaryCamera.Value.FocusPoint.X, Mode=OneWay, TargetNullValue=None, FallbackValue=None}" IsEnabled="False" Grid.Column="2" Grid.Row="6" />
          <TextBlock Text="Rot Y: " Classes="VectorLabel" Grid.Column="3" Grid.Row="6" />
          <TextBox Text="{Binding SecondaryCamera.Value.FocusPoint.Y, Mode=OneWay, TargetNullValue=None, FallbackValue=None}" IsEnabled="False" Grid.Column="4" Grid.Row="6" />
          <TextBlock Text="Rot Z: " Classes="VectorLabel" Grid.Column="5" Grid.Row="6" />
          <TextBox Text="{Binding SecondaryCamera.Value.FocusPoint.Z, Mode=OneWay, TargetNullValue=None, FallbackValue=None}" IsEnabled="False" Grid.Column="6" Grid.Row="6" />

          <TextBlock Text="Color: " Classes="VectorLabel" Grid.Column="7" Grid.Row="5" />
          <StackPanel Orientation="Horizontal" Margin="0,0,0,8" Grid.Column="8" Grid.Row="5" Grid.ColumnSpan="5">
            <color:ColorButton IsEnabled="False" Color="{Binding SecondaryLight.Value.Color, Mode=OneWay, Converter={StaticResource PkxColorAvaloniaColorConverter}}" />
            <TextBlock Text="Hex:" Margin="8" VerticalAlignment="Center" />
            <TextBlock Text="{Binding SecondaryLight.Value.Color, Mode=OneWay, Converter={StaticResource PkxColorHexStringConverter}}" Margin="8,0,32,0" VerticalAlignment="Center" />
            <TextBlock Text="R:" Margin="2" VerticalAlignment="Center" />
            <TextBlock Text="{Binding SecondaryLight.Value.Color.RValue, Mode=OneWay}" Margin="0,0,8,0" VerticalAlignment="Center" />
            <TextBlock Text="G:" Margin="2" VerticalAlignment="Center" />
            <TextBlock Text="{Binding SecondaryLight.Value.Color.GValue, Mode=OneWay}" Margin="0,0,8,0" VerticalAlignment="Center" />
            <TextBlock Text="B:" Margin="2" VerticalAlignment="Center" />
            <TextBlock Text="{Binding SecondaryLight.Value.Color.BValue, Mode=OneWay}" Margin="0,0,8,0" VerticalAlignment="Center" />
          </StackPanel>
          <TextBlock Text="Str: " Classes="VectorLabel" Grid.Column="7" Grid.Row="6" />
          <TextBox Text="{Binding SecondaryLight.Value.Strength, Mode=OneWay, TargetNullValue=None, FallbackValue=None}" IsEnabled="False" Grid.Column="8" Grid.Row="6" Grid.ColumnSpan="2" />
          <TextBlock Text="Type: " Classes="VectorLabel" Grid.Column="10" Grid.Row="6" />
          <i:Icon Value="{Binding SecondaryLight.Value.Type, Mode=OneWay, Converter={StaticResource LightTypeMaterialDesignIconConverter}}" Grid.Column="11" Grid.Row="6" />
          <TextBox Text="{Binding SecondaryLight.Value.Type, Mode=OneWay}" Margin="0,0,16,0" Grid.Column="12" Grid.Row="6" IsEnabled="False" />

          <TextBlock Text="Extras: " HorizontalAlignment="Right" VerticalAlignment="Center" Margin="8" Grid.Column="0" Grid.Row="7" />
          <Border CornerRadius="10" Background="#ff202020" Margin="8,0,8,0" Grid.Column="1" Grid.Row="7" Grid.ColumnSpan="12">
            <ScrollViewer VerticalScrollBarVisibility="Auto" FontSize="12">
              <Grid ShowGridLines="False" ColumnDefinitions="100,*" RowDefinitions="*">

                <TextBlock Text="Removed Objs:" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="0" Grid.Row="0"/>
                <ScrollViewer HorizontalScrollBarVisibility="Auto" Grid.Column="1" Grid.Row="0">
                  <TextBox HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="8,0,8,0" Text="{Binding RemovedObjects, Mode=OneWay, Converter={StaticResource EnumerableSemiColonStringConverter}}" IsEnabled="False" />
                </ScrollViewer>

              </Grid>
            </ScrollViewer>
          </Border>


          <Panel Grid.Column="1" Grid.Row="8" Grid.ColumnSpan="12">
            <Button Margin="64,0,64,0" Width="150" HorizontalAlignment="Center" VerticalAlignment="Center" Command="{ReflectionBinding ModifyBlenderDataCommand}">
              <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center">Modify in Blender</TextBlock>
            </Button>
          </Panel>
        </Grid>
      </Border>
      <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Horizontal" Grid.Column="1" Grid.Row="5">
        <Button Margin="64,0,64,0" Width="60" HorizontalAlignment="Center" VerticalAlignment="Center" Command="{ReflectionBinding SaveCommand}">
          <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center">Save</TextBlock>
        </Button>
        <Button Margin="64,0,64,0" Width="75" HorizontalAlignment="Center" VerticalAlignment="Center" Command="{ReflectionBinding CancelCommand}">
          <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center">Cancel</TextBlock>
        </Button>
      </StackPanel>
    </Grid>
  </Panel>
</Window>
