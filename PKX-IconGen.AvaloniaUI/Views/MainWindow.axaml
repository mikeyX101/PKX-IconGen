<!--
    PKX-IconGen.AvaloniaUI - Avalonia user interface for PKX-IconGen.Core
    Copyright (C) 2021-2022 Samuel Caron/mikeyX#4697

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <https://www.gnu.org/licenses/>. 
-->
<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:assets="clr-namespace:PKXIconGen.AvaloniaUI.Assets"
        xmlns:data="using:PKXIconGen.Core.Data"
        xmlns:vm="using:PKXIconGen.AvaloniaUI.ViewModels"
        xmlns:views="using:PKXIconGen.AvaloniaUI.Views"
        xmlns:conv="using:PKXIconGen.AvaloniaUI.Converters"
        xmlns:pkxcon="using:PKXIconGen.AvaloniaUI.Views.Controls"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="clr-namespace:Projektanker.Icons.Avalonia;assembly=Projektanker.Icons.Avalonia"
        
        mc:Ignorable="d" d:DesignWidth="1024" d:DesignHeight="780"
        x:Class="PKXIconGen.AvaloniaUI.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel" x:CompileBindings="True"
        
        Icon="/Assets/gen-icon.ico"
        Title="PKX-IconGen"
        
        TransparencyLevelHint="AcrylicBlur"
        Background="Transparent"
        ExtendClientAreaChromeHints="PreferSystemChrome"
        ExtendClientAreaToDecorationsHint="True"
        
        MinWidth="1024" Width="1024" MinHeight="780" Height="780" CanResize="True">
  <Window.Styles>
    <StyleInclude Source="/Assets/Styles.axaml" />
  </Window.Styles>
  <Window.Resources>
    <conv:PathStringFileNameStringConverter x:Key="PathStringFileNameStringConverter" />
    <conv:TextureEnumerableHasCustomTextureConverter x:Key="TextureEnumerableHasCustomTextureConverter" />
  </Window.Resources>

  <Panel>
    <ExperimentalAcrylicBorder IsHitTestVisible="False">
      <ExperimentalAcrylicBorder.Material>
        <ExperimentalAcrylicMaterial
            BackgroundSource="Digger"
            TintColor="Black"
            TintOpacity="0.75"
            MaterialOpacity="0.65" />
      </ExperimentalAcrylicBorder.Material>
    </ExperimentalAcrylicBorder>
    
    <Panel IsVisible="{Binding !InitialLoadingFinished}" Background="#dd000000" ZIndex="10">
      <TextBlock Text="Loading, please wait a moment..." Margin="8" HorizontalAlignment="Center" VerticalAlignment="Center"/>
    </Panel>
    
    <DockPanel>
      <StackPanel IsVisible="{Binding IsWindows, Mode=OneTime}" Orientation="Horizontal" HorizontalAlignment="Left" Height="32" Margin="8,0,0,0" DockPanel.Dock="Top">
        <Image Source="/Assets/gen-icon.ico" Width="16" Margin="0,0,8,0" />
        <TextBlock VerticalAlignment="Center">PKX-IconGen</TextBlock>
      </StackPanel>
      <views:MenuView DataContext="{Binding MenuVM}" DockPanel.Dock="Top" />
      <!--20 rows-->
      <Grid ShowGridLines="False" ColumnDefinitions="0.25*,1.3*,1*" RowDefinitions="*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,35">
        <!--Blender Path-->
        <TextBlock Margin="8" HorizontalAlignment="Right" VerticalAlignment="Center" Grid.Column="0" Grid.Row="1">Blender Path:</TextBlock>
        <pkxcon:FileTextField Path="{Binding BlenderPath}" Type="Executable" Title="Select a Blender executable..." IsEnabled="{Binding !CurrentlyRendering}" Grid.Column="1" Grid.Row="1" ToolTip.Tip="{x:Static assets:Resources.TooltipBlenderPath}" />
        <Grid IsVisible="{Binding !IsBlenderVersionValid}" VerticalAlignment="Top" ColumnDefinitions="20,*" RowDefinitions="*" Grid.Column="1" Grid.Row="2">
          <i:Icon FontSize="16" Value="mdi-alert" Classes.Warning="{Binding BlenderPathWarning}" Classes.Error="{Binding BlenderPathError}" Grid.Column="0" Grid.Row="0" />
          <TextBlock FontSize="12" TextWrapping="Wrap" Classes.Warning="{Binding BlenderPathWarning}" Classes.Error="{Binding BlenderPathError}" Text="{Binding BlenderWarningText, Mode=OneWay}" Grid.Column="1" Grid.Row="0" />
        </Grid>

        <!--Blender Optional Arguments-->
        <TextBlock Margin="8" HorizontalAlignment="Right" VerticalAlignment="Center" Grid.Column="0" Grid.Row="3">Blender Args:</TextBlock>
        <TextBox IsEnabled="{Binding !CurrentlyRendering}" Text="{Binding BlenderOptionalArguments, Mode=TwoWay}" Height="32" Grid.Column="1" Grid.Row="3" ToolTip.Tip="{x:Static assets:Resources.TooltipOptionnalArguments}" />

        <!--Output Path-->
        <TextBlock Margin="8" HorizontalAlignment="Right" VerticalAlignment="Center" Grid.Column="0" Grid.Row="4">Output Path:</TextBlock>
        <pkxcon:FileTextField Path="{Binding OutputPath}" Type="Directory" Title="Select an output path..." IsEnabled="{Binding !CurrentlyRendering}" Grid.Column="1" Grid.Row="4" ToolTip.Tip="{x:Static assets:Resources.TooltipOutputPath}" />

        <!--Icon Style-->
        <TextBlock Margin="8" HorizontalAlignment="Right" VerticalAlignment="Center" Grid.Column="0" Grid.Row="5">Icon Style:</TextBlock>
        <ComboBox IsEnabled="{Binding !CurrentlyRendering}" ItemsSource="{Binding IconStyleItems, Mode=OneWay}" SelectedItem="{Binding SelectedIconStyle}" HorizontalAlignment="Stretch" VerticalAlignment="Center" Height="32" Grid.Column="1" Grid.Row="5" ToolTip.Tip="{x:Static assets:Resources.TooltipIconStyle}">
          <ComboBox.ItemTemplate>
            <DataTemplate DataType="{x:Type data:IconStyle}">
              <Panel VerticalAlignment="Center" Height="30">
                <TextBlock VerticalAlignment="Center" Text="{Binding DisplayName}" />
              </Panel>
            </DataTemplate>
          </ComboBox.ItemTemplate>
        </ComboBox>

        <!--Render Scale-->
        <TextBlock Margin="8" HorizontalAlignment="Right" VerticalAlignment="Center" Grid.Column="0" Grid.Row="6">Render Scale:</TextBlock>
        <ComboBox IsEnabled="{Binding !CurrentlyRendering}" ItemsSource="{Binding RenderScaleItems, Mode=OneWay}" SelectedItem="{Binding SelectedRenderScale}" HorizontalAlignment="Stretch" VerticalAlignment="Center" Height="32" Grid.Column="1" Grid.Row="6" ToolTip.Tip="{x:Static assets:Resources.TooltipRenderScale}" />

        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontWeight="Bold" FontSize="16" Text="Pokemon" Grid.Column="1" Grid.Row="7" />
        <!--Pokemon Buttons-->
        <Grid ShowGridLines="False" ColumnDefinitions="0.75*,1.15*,0.75*,0.90*" RowDefinitions="*" Grid.Column="1" Grid.Row="8">
          <Panel HorizontalAlignment="Center" Grid.Column="0" Grid.Row="0">
            <Button IsEnabled="{Binding !CurrentlyRendering}" Content="Add New" Command="{Binding NewRenderDataCommand}" />
          </Panel>
          <Panel HorizontalAlignment="Center" Grid.Column="1" Grid.Row="0">
            <Button Content="Delete Selected" Command="{ReflectionBinding DeleteSelectedRenderData}">
              <Button.IsEnabled>
                  <MultiBinding Converter="{x:Static BoolConverters.And}">
                    <Binding Path="!CurrentlyRendering"/>
                    <Binding Path="EnableDeleteButton"/>
                  </MultiBinding>
              </Button.IsEnabled>
            </Button>
          </Panel>
          <Panel HorizontalAlignment="Center" Grid.Column="2" Grid.Row="0">
            <Button IsEnabled="{Binding !CurrentlyRendering}" Content="Select All" Command="{ReflectionBinding SelectAllRenderData}" />
          </Panel>
          <Panel HorizontalAlignment="Center" Grid.Column="3" Grid.Row="0">
            <Button IsEnabled="{Binding !CurrentlyRendering}" Content="Unselect All" Command="{ReflectionBinding DeselectAllRenderData}" />
          </Panel>
        </Grid>
        <!--Pokemon-->
        <Grid VerticalAlignment="Center" Margin="4,0,0,0" ColumnDefinitions="0.65*, *, 0.75*, 0.25*, 0.10*" RowDefinitions="*" Grid.Column="1" Grid.Row="9">
          <TextBlock Text="Name" Grid.Column="0" />
          <TextBlock Text="Model" Grid.Column="1" />
          <TextBlock HorizontalAlignment="Center" Text="Has Custom Textures" Grid.Column="2" />
        </Grid>
        <ListBox IsEnabled="{Binding !CurrentlyRendering}" ItemsSource="{Binding PokemonRenderDataItems}" Selection="{Binding PokemonRenderDataSelection}" SelectionMode="Multiple,Toggle" Margin="0,0,0,5" Background="#ff202020" Grid.Column="1" Grid.Row="10" Grid.RowSpan="8">
          <ListBox.Styles>
            <Style Selector="ListBoxItem">
              <Setter Property="Padding" Value="6"/>
            </Style>
          </ListBox.Styles>
          <ListBox.ItemTemplate>
              <DataTemplate DataType="{x:Type data:PokemonRenderData}">
                <Grid ColumnDefinitions="0.65*, *, 0.75*, 0.25*, 0.10*" RowDefinitions="*">
                  <TextBlock VerticalAlignment="Center" Text="{Binding Name}" Grid.Column="0" />
                  <TextBlock VerticalAlignment="Center" Text="{Binding Model, Converter={StaticResource PathStringFileNameStringConverter}}" Grid.Column="1" />
                  <Panel HorizontalAlignment="Center" Grid.Column="2">
                    <i:Icon FontSize="16" Value="mdi-check">
                      <i:Icon.IsVisible>
                        <MultiBinding Mode="OneWay" Converter="{x:Static BoolConverters.Or}">
                          <Binding Path="FaceRender.Textures" Converter="{StaticResource TextureEnumerableHasCustomTextureConverter}"/>
                          <Binding Path="Shiny.FaceRender.Textures" Converter="{StaticResource TextureEnumerableHasCustomTextureConverter}"/>
                        </MultiBinding>
                      </i:Icon.IsVisible>
                    </i:Icon>
                  </Panel>
                  <Panel HorizontalAlignment="Right" Grid.Column="3">
                    <Button HorizontalAlignment="Center" Command="{ReflectionBinding $parent[ListBox].DataContext.EditRenderDataCommand, FallbackValue=None}" CommandParameter="{Binding .}">
                      <i:Icon FontSize="16" Value="mdi-pencil" />
                    </Button>
                  </Panel>
                </Grid>
              </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <!--Assets Path-->
        <TextBlock Margin="8" HorizontalAlignment="Right" VerticalAlignment="Center" Grid.Column="0" Grid.Row="18">Assets Path:</TextBlock>
        <pkxcon:FileTextField Path="{Binding AssetsPath}" Type="Directory" Title="Select the assets path..." IsEnabled="{Binding !CurrentlyRendering}" Grid.Column="1" Grid.Row="18" ToolTip.Tip="{x:Static assets:Resources.TooltipAssetsPath}" />
        <!--Log-->
        <Grid Margin="16,0,16,8" Grid.Column="2" Grid.Row="0" Grid.RowSpan="18" ColumnDefinitions="*" RowDefinitions="20,*">
          <TextBlock Height="20" Margin="5" Grid.Column="0" Grid.Row="0">Log</TextBlock>
          <views:LogView DataContext="{Binding LogVM}" Padding="0,5,0,0" Grid.Column="0" Grid.Row="1" />
        </Grid>

        <!--State and render button-->
        <Grid Margin="16,0,16,5" ColumnDefinitions="50,*,100" RowDefinitions="*" Grid.Column="2" Grid.Row="18" Grid.RowSpan="2">
          <Grid ColumnDefinitions="50" RowDefinitions="*,*" VerticalAlignment="Center" Grid.Column="0" Grid.Row="0">
            <TextBlock Text="{Binding PercentPokemonRendered}" Width="50" TextAlignment="Center" VerticalAlignment="Center" Grid.Column="0" Grid.Row="0" />
            <TextBlock Text="{Binding DisplayPokemonRendered}" Width="50" TextAlignment="Center" VerticalAlignment="Center" Grid.Column="0" Grid.Row="1" />
          </Grid>

          <ProgressBar Minimum="0" Maximum="{Binding NbOfRenders}" Value="{Binding NbOfPokemonRendered}" Height="20" Margin="5" VerticalAlignment="Center" Grid.Column="1" Grid.Row="0" />
          <SplitButton IsVisible="{Binding !CurrentlyRendering}" Width="100" HorizontalAlignment="Right" VerticalAlignment="Center" Command="{Binding RenderCommand}" CommandParameter="{x:Static data:RenderTarget.All}" Grid.Column="2" Grid.Row="0">
            <TextBlock TextAlignment="Center">Render</TextBlock>
            
            <SplitButton.Flyout>
              <MenuFlyout Placement="Top">
                <MenuItem Header="Render Face Only"
                          Command="{Binding RenderCommand}"
                          CommandParameter="{x:Static data:RenderTarget.Face}" />
                <MenuItem Header="Render Box Only"
                          Command="{Binding RenderCommand}"
                          CommandParameter="{x:Static data:RenderTarget.Box}" />
              </MenuFlyout>
            </SplitButton.Flyout>
          </SplitButton>
          <Button IsVisible="{Binding CurrentlyRendering}" Width="100" HorizontalAlignment="Right" VerticalAlignment="Center" Command="{ReflectionBinding EndRender}" Grid.Column="2" Grid.Row="0">
            <TextBlock TextAlignment="Center">Cancel</TextBlock>
          </Button>
        </Grid>
      </Grid>
    </DockPanel>
  </Panel>
</Window>
