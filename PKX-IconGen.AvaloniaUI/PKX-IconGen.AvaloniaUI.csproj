<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>WinExe</OutputType>
    <TargetFramework>net6.0</TargetFramework>
    <Nullable>enable</Nullable>
    <RootNamespace>PKXIconGen.AvaloniaUI</RootNamespace>
    <ApplicationIcon>Assets\gen-icon.ico</ApplicationIcon>
    <AssemblyName>$(MSBuildProjectName)</AssemblyName>
    <ProductName>PKX-IconGenUI</ProductName>
    <DebugType>full</DebugType>
    <SignAssembly>False</SignAssembly>
    <ErrorReport>none</ErrorReport>
    <EnforceCodeStyleInBuild>True</EnforceCodeStyleInBuild>
    <EnableNETAnalyzers>True</EnableNETAnalyzers>
    <Authors>mikeyX</Authors>
    <AssemblyVersion>0.2.6</AssemblyVersion>
    <FileVersion>$(PackageVersion)</FileVersion>
    <Version>0.2.0</Version>
    <StartupObject></StartupObject>
    <ProduceReferenceAssembly>False</ProduceReferenceAssembly>
    <RunPostBuildEvent>Always</RunPostBuildEvent>

    <DisableFastUpToDateCheck>true</DisableFastUpToDateCheck>

    <PackageRequireLicenseAcceptance>False</PackageRequireLicenseAcceptance>

    <PackageLicenseExpression>GPL-3.0-or-later</PackageLicenseExpression>

    <PackageVersion>0.2.6</PackageVersion>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <CheckForOverflowUnderflow>True</CheckForOverflowUnderflow>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <CheckForOverflowUnderflow>True</CheckForOverflowUnderflow>
  </PropertyGroup>
  <ItemGroup>
    <AvaloniaResource Include="Assets\**" />
    <AvaloniaResource Remove="Assets\*.psd" />
    <AvaloniaResource Remove="Assets\*.xcf" />
    <AvaloniaXaml Remove="Data\**" />
    <Compile Remove="Data\**" />
    <Compile Remove="PKX-IconGen.Core\**" />
    <EmbeddedResource Remove="Data\**" />
    <None Remove="Data\**" />
    <None Remove=".gitignore" />
    <Compile Update="Views\Controls\ColorDisplay.axaml.Properties.cs">
      <DependentUpon>ColorDisplay.axaml.cs</DependentUpon>
    </Compile>
    <Compile Update="Views\Controls\FileTextField.axaml.cs">
      <DependentUpon>FileTextField.axaml</DependentUpon>
    </Compile>
    <Compile Update="Views\Controls\FileTextField.axaml.Properties.cs">
      <DependentUpon>FileTextField.axaml.cs</DependentUpon>
    </Compile>
    <Compile Update="Views\TextureDownloadWindow.axaml.cs">
      <DependentUpon>TextureDownloadWindow.axaml</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="Avalonia" Version="0.10.18" />
    <PackageReference Include="Avalonia.Desktop" Version="0.10.18" />
    <!--Condition below is needed to remove Avalonia.Diagnostics package from build output in Release configuration.-->
    <PackageReference Condition="'$(Configuration)' == 'Debug'" Include="Avalonia.Diagnostics" Version="0.10.18" />
    <PackageReference Include="Avalonia.ReactiveUI" Version="0.10.18" />
    <PackageReference Include="Avalonia.Xaml.Behaviors" Version="0.10.18" />
    <PackageReference Include="Avalonia.Xaml.Interactions" Version="0.10.18" />
    <PackageReference Include="Avalonia.Xaml.Interactivity" Version="0.10.18" />
    <PackageReference Include="AvaloniaColorPicker" Version="1.3.4" />
    <!-- Only needed to scafold new migrations -->
    <PackageReference Condition="'$(Configuration)' == 'Debug'" Include="Microsoft.EntityFrameworkCore.Design" Version="6.0.9">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Projektanker.Icons.Avalonia" Version="5.5.0" />
    <PackageReference Include="Projektanker.Icons.Avalonia.MaterialDesign" Version="5.5.0" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\PKX-IconGen.Core\PKX-IconGen.Core.csproj" />
  </ItemGroup>

  <Target Name="PostBuild" AfterTargets="PostBuildEvent">
    <!--Copy Python files on builds-->
    <Exec Condition="'$(SystemRoot)' == 'C:\Windows' And '$(Configuration)' != 'Debug'" Command="cd &quot;$(ProjectDir)..&quot;&#xD;&#xA;call PostBuildWindows.bat &quot;$(PublishDir)/&quot; &quot;$(ProjectDir)&quot;" />
    <Exec Condition="'$(SystemRoot)' == 'C:\Windows' And '$(Configuration)' == 'Debug'" Command="cd &quot;$(ProjectDir)..&quot;&#xD;&#xA;call PostBuildWindows.bat &quot;$(TargetDir)&quot; &quot;$(ProjectDir)&quot;" />

    <Exec Condition="'$(SHELL)' == '/bin/bash' And '$(Configuration)' != 'Debug'" Command="cd $(ProjectDir)..;chmod +x ./PostBuildBash.sh;./PostBuildBash.sh &quot;$(PublishDir)/&quot; &quot;$(ProjectDir)&quot;" />
    <Exec Condition="'$(SHELL)' == '/bin/bash' And '$(Configuration)' == 'Debug'" Command="cd $(ProjectDir)..;chmod +x ./PostBuildBash.sh;./PostBuildBash.sh &quot;$(TargetDir)&quot; &quot;$(ProjectDir)&quot;" />
  </Target>
</Project>
